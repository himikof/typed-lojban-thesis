\likechapter{Введение}

Вопросы, связанные с алгоритмами распознавания и обработки естественных языков,
а также создания новых языков общего назначения, понятных как человеку, так и компьютеру
являются предметом исследования уже долгое время. Эта область находится на пересечении
традиционной лингвистики, математической логики и теории языков программирования (ЯП).

Одной из важных задач в данной области является разработка языков, достаточно близких
к естественным, чтобы на них можно было общаться в письменной и устной форме и,
возможно, даже думать, и, одновременно, лишенных неоднозначности и обилия исключений,
обычно присущих естественным языкам.

Одним из заметных подходов к решению данной задачи является язык _Lójban_[@cll].
Этот язык был разработан в 90-х годах XX века организацией The Logical Language Group.
По оценкам[@lojban:howmanyspeakers], в 2010 году
размер языкового сообщества составлял 2 тысячи человек, включая до сотни людей,
активно общающихся на нем в Интернете.
Он принадлежит к так называемым _логическим языкам_ --- группе языков, основанных на
формализмах математической логики и делающих акцент на формулировке истинных утверждений.
Главными целями языка Lojban являются полное устранение _синтаксической неоднозначности_ 
--- возможности интерпретации одного высказывания несколькими корректными грамматически
различными способами и доступность для машинного разбора. Гораздо более сложная
задача устранения смысловой неоднозначности решается в той же мере и теми же способами,
что и в обычных естественных языках. 

Такие свойства языка Lojban ставят его в уникальное положение --- с одной стороны, он
достаточно гибок для выражения мыслей и общения людей вообще, и, одновременно,
весьма близок к хорошо исследованным ЯП.
Это позволяет применить существующие инструменты и теории анализа ЯП к достаточно
богатому и сложному объекту.

К сожалению, именно в данном направлении наиболее исследованным является только формулировка
формальной грамматики языка и создания машинных парсеров на её основе. Хотя это уже
безусловно больше, чем удается достичь схожими методами для естественных языков, при
подходе со стороны теории ЯП становится ясно, что это лишь малая часть необходимого
для полноценного машинного разбора языка.

Типичный язык программирования разбирается следующим образом:

 1. лексический и грамматический разбор по формальной грамматике;
 2. построение абстрактного синтаксического дерева (AST), соответствующего логической структуре программы;
 3. семантический анализ AST: проверка типов, видимости идентификаторов и т.д.;
 4. операции над разобранной программой: трансформации (оптимизация, рефакторинг) и исполнение (компиляция, интерпретация).

Без построения AST дальнейшие операции над программой трудно сформулировать, а
без семантического анализа обработчик примет значительное количество некорректных программ,
которые не содержат ошибок с точки зрения формальной грамматики.

Данная работа сосредотачивается на анализе языка Lojban с точки зрения _теории систем типов_.
Теория систем типов занимается вопросом ограничения множества всех возможных выражений языка до
множества выражений, _имеющих смысл_, для различных определений фразы &laquo;иметь смысл&raquo;.
Для ЯП это обычно &laquo;программы с хорошо определенным корректным поведением&raquo;.
Для логического языка нахождение разумного определения этой фразы является частью данной работы.

В данной работе сделаны некоторые шаги на пути к ответу на следующий вопрос: есть ли удобная система типов,
в которой можно сопоставить тип имеющим смысл текстам на языке Lojban, какой это будет тип и какие
не имеющие смысла тексты удается отсеять проверкой типов.
