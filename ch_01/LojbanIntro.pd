Введение в язык Ложбан
----------------------

Язык _Лóжбан_ (_англ._ Lójban, _ложб._ lojban.)[@cll] 
был разработан в 90-х годах XX века организацией The Logical Language Group.
По оценкам[@lojban:howmanyspeakers], в 2010 году
размер языкового сообщества составлял 2 тысячи человек, включая до сотни людей,
активно общающихся на нем в Интернете.
Он принадлежит к так называемым _логическим языкам_ --- группе языков, основанных на
формализмах математической логики и делающих акцент на формулировке истинных утверждений.
Главными целями языка Lojban являются полное устранение _синтаксической неоднозначности_ 
--- возможности интерпретации одного высказывания несколькими корректными грамматически
различными способами и доступность для машинного разбора. Гораздо более сложная
задача устранения смысловой неоднозначности решается в той же мере и теми же способами,
что и в обычных естественных языках.

Ложбан основан на логическом исчислении предикатов. Главной конструкцией является
утверждение (`bridi`), что данный предикат (`selbri`) выполняется при заданных
аргументах (`sumti`). В естественном языке `bridi` соответствует простому предложению,
`selbri` --- глаголу, а `sumti` исполняют роли подлежащего, дополнений и обстоятельств.

Например:

    mi klama le zarci le briju
    x1 pred  x2       x3
    Я  идти  рынок    офис

Это предложение (`bridi`) на самом деле означает &laquo;`klama(mi, le zarci, le briju)` истинно&raquo;,
причём `klama` означает &laquo;x1 идёт/шёл/будет идти к/в x2 из/от x3 маршрутом x4 на (транспорт/способ перемещения) x5&raquo;.
Иначе говоря, аналог &laquo;Я иду (без указания времени) на рынок из офиса&raquo; на русском языке.

Несмотря на кажущуюся простоту основы языка, образованной, по сути, только аппликацией параметров к предикатам,
он обладает достаточно большой выразительностью. Она достигается за счёт того, что роль предикатов и аргументов
могут выполнять сложные составные конструкции, содержащие в себе, в свою очередь, предикаты, аргументы и даже целые
высказывания. В отличие от формального исчисления предикатов, в семантике языка Ложбан есть правила, позволяющие неявно выводить
квантифицированные объявления переменных из их использования, что делает наличие кванторов и явных объявлений необязательным
(хотя и возможным, при необходимости). Это улучшает речевые свойства языка, делая его ближе к натуральным, но сохраняет строгость
описания.

Далее будут подробнее разобраны конструкции языка Ложбан, относящиеся к данной работе.

Ценность языка Lojban для данной работы
---------------------------------------

Cвойства языка Lojban ставят его в уникальное положение --- с одной стороны, он
достаточно гибок для выражения мыслей и общения людей вообще, и, одновременно,
весьма близок к хорошо исследованным ЯП.
Это позволяет применить существующие инструменты и теории анализа ЯП к достаточно
богатому и сложному объекту.

К сожалению, именно в данном направлении наиболее исследованным является только формулировка
формальной грамматики языка и создания машинных парсеров на её основе. Хотя это уже
безусловно больше, чем удается достичь схожими методами для естественных языков, при
подходе со стороны теории ЯП становится ясно, что это лишь малая часть необходимого
для полноценного машинного разбора языка.

Типичный язык программирования разбирается следующим образом:

 1. лексический и грамматический разбор по формальной грамматике;
 2. построение абстрактного синтаксического дерева (AST), соответствующего логической структуре программы;
 3. семантический анализ AST: проверка типов, видимости идентификаторов и т.д.;
 4. операции над разобранной программой: трансформации (оптимизация, рефакторинг) и исполнение (компиляция, интерпретация).

Без построения AST дальнейшие операции над программой трудно сформулировать, а
без семантического анализа обработчик примет значительное количество некорректных программ,
которые не содержат ошибок с точки зрения формальной грамматики.

Одной из целей данной работы является формулировка такого AST
на достаточно выразительном метаязыке.

Предикаты (`selbri`)
--------------------

Все виды предикатов обладают сигнатурой (*англ.* place structure) --- списком (фиксированной длины) смыслов их аргументов.
Длина этого списка называется арностью (*англ.* arity) предиката. Выше был приведена сигнатура простого предиката `klama`.

### Простые предикаты (`brivla`) ###

Это базовые элементы языка, полностью образующие его словарь (исключая служебные слова). Для языка Ложбан грамматическим словарём
является список `brivla` с соответствующими им сигнатурами. Этой информации достаточно для определения грамматической корректности
употребления слов.

Словарь, используемый в данной работе:

 * `klama` --- &laquo;x1 идёт к/в x2 из/от x3 маршрутом x4 на (транспорт/способ перемещения) x5&raquo;;
 * `tavla` --- &laquo;x1 говорит с/рассказывает x2 (слушатели) о x3 (тема) на языке x4&raquo;;
 * `dunda` --- &laquo;x1 даёт x2 (предмет) x3 (получатель) (бесплатно)&raquo;;
 * `zdani` --- &laquo;x1 является домом/обиталищем/жильём для x2&raquo;;
 * `pelxu` --- &laquo;x1 жёлтый&raquo;.

### Составные предикаты (`tanru`) ###

Несколько предикатов можно слить в один составной с помощью операторов образования `tanru`. Получаемый предикат наследует сигнатуру одного
из образующих предикатов (называемого основным, *ложб.* `tertau`), и его первый аргумент отождествляется с первыми аргументами остальных предикатов.
Пример: `pelxu zdani` означает &laquo;дом, имеющий отношение к быть-жёлтым&raquo;, или, что эквивалентно, &laquo;жёлтый дом&raquo;.

Таким образом, данная конструкция позволяет достаточно логичным образом ввести в язык аналог прилагательных/определений, не заводя для них отдельного
словаря.

Простая аппликация предикатов --- не единственный оператор, образующий `tanru`. Можно упомянуть операторы `co` и `bo`, отличающиеся порядком аргументов и
направлением ассоциативности, соответственно и явные скобки для группировки предикатов `ke ... ke'e`.

Аргументы (`sumti`)
-------------------

В качестве аргументов предикатов могут выступать примитивные аргументы, 
имена собственные или 
результат действия различных операторов, преобразующих объекты в аргументы.

### Примитивные аргументы ###

Примитивные аргументы (pro-sumti), аналог местоимений в русском языке --- предопределённые
служебные слова для часто используемых в языке аргументов.

В данной работе определяются:

* `mi` --- &laquo;я&raquo;;
* `do` --- &laquo;ты/вы&raquo;;
* `ti` --- &laquo;этот (близкое расстояние)&raquo;;
* `ta` --- &laquo;этот/тот (среднее расстояние)&raquo;;
* `tu` --- &laquo;тот (далёкое расстояние)&raquo;;
* `zo'e` --- &laquo;не определено/не важно (значение по умолчанию)&raquo;.

### Имена собственные ###

Имена собственные (_ложб._ cmene) в качестве предикатов используются вместе с конструкцией
`la`: например, &laquo;`la moskva.`&raquo; --- &laquo;Москва&raquo;. 
Для сохранения синтаксической, и, в особенности, фонетической однозначности 
имена должны подчиняться определённому
набору правил, рассмотрение которых, однако, выходит за рамки данной работы.

### Предикаты в качестве аргументов ###

Операторы, превращающие предикаты в аргументы (аналог артиклей в
английском языке) имеют следующий вид:

* `le `  _p_: \quad $\forall x: x$ описывается-в-контексте $p(x,$ `zo'e`$, ...)$
* `lo `  _p_: \quad $\exists x: p(x,$ `zo'e`$, ...)$
* `ro lo `  _p_: \quad $\forall x: p(x,$ `zo'e`$, ...)$

В последнем случае оператор `lo` используется вместе с квантором `ro` (для всех),
заменяющим квантор по-умолчанию для этого оператора (квантор существования).
